basePath: /
definitions:
  controls.Person:
    description: Person information with all fields
    properties:
      age:
        type: integer
      gender:
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Dmitriy
        type: string
      nationality:
        type: string
      patronymic:
        example: Vasilevich
        type: string
      surname:
        example: Ushakov
        type: string
    type: object
  handler.AddPersonResponse:
    properties:
      message:
        type: string
      person:
        $ref: '#/definitions/controls.Person'
    type: object
  handler.DeleteRequest:
    properties:
      id:
        type: integer
    type: object
  handler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handler.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  handler.UpdateRequest:
    properties:
      age:
        type: integer
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8084
info:
  contact: {}
  description: REST API for managing people
  title: People API
  version: "1.0"
paths:
  /add:
    post:
      consumes:
      - application/json
      description: Insert a new person and auto-enrich with age, gender, and nationality
      parameters:
      - description: Person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/controls.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AddPersonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Add new person
  /delete:
    post:
      consumes:
      - application/json
      description: Delete person by ID
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/handler.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete a person
  /person:
    get:
      description: Filter by name, surname, gender, nationality, age with pagination
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Gender
        in: query
        name: gender
        type: string
      - description: Nationality
        in: query
        name: nationality
        type: string
      - description: Age
        in: query
        name: age
        type: string
      - description: Limit (default 10)
        in: query
        name: limit
        type: integer
      - description: Offset (default 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controls.Person'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get filtered list of persons
  /update:
    post:
      consumes:
      - application/json
      description: Update all person fields by ID
      parameters:
      - description: Person data
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update a person
swagger: "2.0"
